The Neural Network implementation consists of 

1. a constructor to set basic structure (number of inputs, outputs, hidden layer and nodes), variables (learning rate, max SSE, max epoch and momentum, activation function) and generate random weights.

2. functions to input and set weights and thetas.

3. a function to calculate values of all neurons according to input and weights.

4. a function to calculate error of each node by back propagation

5. a function to calculate delta weights, and a function to update weights according to the neuron values, errors, momentum and previous weight deltas.

6. a train function to train the neural net given expected input and output list

To run the code, we can create a NeuralMMAgent object and run the train_net function. We can set the weights by the set_weights function, or we can use random weights generated by the constructor. We can set the learning rate, momentum, max epoch, max SSE and other variabels with the train_net function. It would print the weights and neuron values after 1st epoch, and show the change of SSE by a plt function.